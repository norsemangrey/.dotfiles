# ZSH Configuration
# Shell configuration and executing commands

export PATH=$PATH:$HOME/.local/bin

# Stop annoying beeping
unsetopt BEEP

# Check plugins only on login shell
if [[ -o login ]] && [[ -z "$TMUX" ]]; then

  cloneOrUpdatePlugin "https://github.com/zsh-users/zsh-completions"
  cloneOrUpdatePlugin "https://github.com/zsh-users/zsh-autosuggestions"
  cloneOrUpdatePlugin "https://github.com/zsh-users/zsh-syntax-highlighting"
  cloneOrUpdatePlugin "https://github.com/Aloxaf/fzf-tab"
  cloneOrUpdatePlugin "https://github.com/norsemangrey/zsh-ssh"
  cloneOrUpdatePlugin "https://github.com/norsemangrey/zsh-active-cheatsheet.git"

fi

# +-------------------+
# | LANGUAGE & REGION |
# +-------------------+

# Set language and region setting for the shell

export LANG=en_US.UTF-8
export LC_CTYPE=nb_NO.UTF-8
export LC_TIME=nb_NO.UTF-8
export LC_NUMERIC=nb_NO.UTF-8
export LC_MONETARY=nb_NO.UTF-8
export LC_COLLATE=en_US.UTF-8
export LC_MESSAGES=en_US.UTF-8

# +---------+
# | SCRIPTS |
# +---------+

# Load ZSH scripts
source $ZDOTDIR/scripts.zsh

# +---------+
# | ALIASES |
# +---------+

# Load aliases
source ~/.config/aliases/aliases

# Cheat
# Trigger      rl
# Type         alias
# Domain       shell
# Conditional  no
# Alternative  None
# Function     source $ZDOTDIR/.zshrc
# Description  Reloading the ZSH shell configuration.
# Example      rl â†’ runs .zshrc
# Short        Reloads shell
# Executable   no
alias rl="source $ZDOTDIR/.zshrc"

# +--------+
# | COLORS |
# +--------+

BACKGROUND_COLOR="#EEE8D5"
export BACKGROUND_COLOR

# +---------+
# | HISTORY |
# +---------+

setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.

# +------------+
# | NAVIGATION |
# +------------+

# General settings

setopt AUTO_CD              # Go to folder path without using 'cd' as long as it exists

# Directory stack setting (history of visited directories, see also aliases for usage)

setopt AUTO_PUSHD           # Push the visited directory onto the stack on 'cd'.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicate directories in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.

# +------------+
# | COMPLETION |
# +------------+

# Include the completions from the zsh-completions package
# Loads additional completion definitions from the plugin (but not required)
fpath=($ZDOTDIR/plugins/zsh-completions/src $fpath)

# Initialize the completion for the current ZSH session
# (commented out when using the zsh-autocomplete plugin)
autoload -Uz compinit
compinit

# Allow hidden files/directories to be shown/included in completions
_comp_options+=(globdots)

# Set some general completion settings
setopt MENU_COMPLETE        # Automatically highlight first element of completion menu
setopt AUTO_LIST            # Automatically list choices on ambiguous completion.
setopt COMPLETE_IN_WORD     # Complete from both ends of a word.

# Configure some display styles for the completion system

# Define the completers to use (the completer system will try each in the order they are defined)
zstyle ':completion:*' completer _expand _complete _correct _approximate

# Enabling caching to file for the completion system (speeds up some commands)
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/.zcompcache"

# Add descriptive hints to completion options
zstyle ':completion:*' auto-description 'specify: %d'

# Enables menu selection, allowing to scroll through options with arrow keys
# (set to 'no' to disable menu selection when using fzf-tab)
zstyle ':completion:*' menu no

# Groups the different type of matches under their description
zstyle ':completion:*' group-name ''

# Enables completion for command options (offers suggestions for options relevant to the command being typed)
zstyle ':completion:*' complete-options true

# Makes completion more forgiving and flexible (case-insensitive etc.)
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'

# Sorts files in completion suggestions based on their modification times
zstyle ':completion:*' file-sort modification

# Customizes the order of directory suggestions when using the 'cd' command
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories

# Retains the prefix typed by the user in the completion suggestions
zstyle ':completion:*' keep-prefix true

# Better SSH/Rsync/SCP Autocomplete
zstyle ':completion:*:(ssh|scp|ftp|sftp):*' hosts $hosts

# Customizes the prompt shown when the list of completions is truncated.
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s

# Customizes colors for different types of completion descriptions and warnings
zstyle ':completion:*:descriptions' format '[%d]'

# +-----------------+
# | AUTO COMPLETION |
# +-----------------+

# Load Auto-Suggestions plugin
#(in addition to the ZSH completion system)
#source $ZDOTDIR/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh

# Set default behavior to search backward through the command history incrementally
#zstyle ':autocomplete:*' default-context history-incremental-search-backward

# Set the minimum input length for the incremental search to trigger
#zstyle ':autocomplete:history-incremental-search-backward:*' min-input 1

# Override for history search only
#zstyle ':autocomplete:history-incremental-search-backward:*' list-lines 10

# +-------------+
# | SUGGESTIONS |
# +-------------+


# Load Auto-Suggestions plugin
source $ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# Set the font highlight style of the auto-suggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=blue,bg=white,bold,underline"

# +--------------+
# | HIGHLIGHTING |
# +--------------+

# Load Syntax Highlighting plugin
source $ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# +-----+
# | FZF |
# +-----+

# Check if the fzf key bindings and completion script exists and source it if it does
[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh
[ -f /usr/share/doc/fzf/examples/completion.zsh ] && source   /usr/share/doc/fzf/examples/completion.zsh

# Load FZF Tab Completion plugin
source $ZDOTDIR/plugins/fzf-tab/fzf-tab.plugin.zsh

# Ensure that fzf-tab uses the default options for FZF
zstyle ':fzf-tab:*' use-fzf-default-opts yes

# Preview contents when tab completing directories
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd --tree --color=always --icon=always ${realpath}'

# +-----+
# | SSH |
# +-----+

# Load SSH completion plugin
source $ZDOTDIR/plugins/zsh-ssh/zsh-ssh.zsh

zstyle ':completion:*:*:ssh:*' fzf-completion yes

compdef _ssh ssh


# +--------+
# | CHEATS |
# +--------+

# Set cheats root directory
export ZSH_ACTIVE_CHEATSHEET_DIRS=("$HOME/.config")

# Load the cheatsheet plugin
source $ZDOTDIR/plugins/zsh-active-cheatsheet/zsh-active-cheatsheet.plugin.zsh


# +--------+
# | PROMPT |
# +--------+

# Set env for simple prompt line
function simple() {
  export POSH_FULL_PROMPT="0"
  echo "Enabling simple prompt..."
}

# Set env for full prompt line
function full() {
  export POSH_FULL_PROMPT="1"
  export "Enabling simple prompt..."
}

function set_poshcontext() {
    export POSH_FULL_PROMPT="0"
}

# Load Oh-My-Posh prompt
eval "$(oh-my-posh init zsh --config $HOME/.config/oh-my-posh/themes/posh-custom-theme.omp.json)"

# +------+
# | INFO |
# +------+

# Display system information only for login shells and not inside tmux
if [[ -o login ]] && [[ -z "$TMUX" ]]; then

  fastfetch

fi

# +----------+
# | KEYCHAIN |
# +----------+

# Initialize key list
SSH_KEYS=()

# Add keys to list
for key in ~/.ssh/keys/*_ed25519; do

  # Check file and add
  if [[ -f "$key" ]]; then

    SSH_KEYS+=("$key")

  fi

done

# Load all keys into keychain
if [[ ${#SSH_KEYS[@]} -gt 0 ]]; then

  # Start keychain and load SSH keys
  eval $(keychain --agents ssh --quiet --eval "${SSH_KEYS[@]}")

fi
